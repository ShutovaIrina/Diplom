#Область ОписаниеПеременных
&НаКлиенте
Перем Специалист;
&НаКлиенте
Перем ДатаРабот;
&НаКлиенте
Перем СформироватьСообщение;
&НаКлиенте
Перем ВремяРабот;
&НаКлиенте
Перем ВремяОкончанияРабот;

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	Специалист = Объект.Специалист;
	ДатаРабот = Объект.ДатаПроведенияРабот;
	ВремяРабот = Объект.ВремяНачалаРаботПлан;
	ВремяОкончанияРабот = Объект.ВремяОкончанияРаботПлан;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	
	Если СформироватьСообщение = Истина тогда
		ВызватьСформироватьСообщение();
	КонецЕсли;	
	СформироватьСообщение = Ложь;
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура СпециалистПриИзменении(Элемент)
	Если Объект.Специалист <> Специалист тогда
		СформироватьСообщение = Истина; 
	КонецЕсли;
	Специалист = Объект.Специалист;
КонецПроцедуры

&НаКлиенте
Процедура ДатаПроведенияРаботПриИзменении(Элемент)
	Если Объект.ДатаПроведенияРабот <> ДатаРабот тогда
		СформироватьСообщение = Истина; 
	КонецЕсли;
	ДатаРабот = Объект.ДатаПроведенияРабот; 
КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалаРаботПланПриИзменении(Элемент)
	Если Объект.ВремяНачалаРаботПлан <> ВремяРабот тогда
		СформироватьСообщение = Истина; 
	КонецЕсли;
	ВремяРабот = Объект.ВремяНачалаРаботПлан; 
КонецПроцедуры

&НаКлиенте
Процедура ВремяОкончанияРаботПланПриИзменении(Элемент)
	Если Объект.ВремяОкончанияРаботПлан <> ВремяОкончанияРабот тогда
		СформироватьСообщение = Истина; 
	КонецЕсли;
	ВремяОкончанияРабот = Объект.ВремяОкончанияРаботПлан;
КонецПроцедуры

#КонецОбласти	

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры
&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти  

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВызватьСформироватьСообщение()
	
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	ТекОбъект.СформироватьСообщение();
	
КонецПроцедуры;

#КонецОбласти	

