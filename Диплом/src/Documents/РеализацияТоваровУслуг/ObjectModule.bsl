   
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
	
	#Область ОбработчикиСобытий
	
	Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
		
		Ответственный = Пользователи.ТекущийПользователь();
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
			ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения);
		КонецЕсли;
		//Доработка диплом Шутова ИН
		Если ТипЗнч(ДанныеЗаполнения) = Тип ("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			Дата = ОбщегоНазначения.ТекущаяДатаПользователя();
			ЗаполнитьПоДоговору(ДанныеЗаполнения);
		КонецЕсли;		
		//Конец доработки
		
	КонецПроцедуры
	
	Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
		Если ОбменДанными.Загрузка Тогда
			Возврат;
		КонецЕсли;
		
		СуммаДокумента = Товары.Итог("Сумма") + Услуги.Итог("Сумма"); 
		
		
	КонецПроцедуры
	
	Процедура ОбработкаПроведения(Отказ, Режим)
		
		Движения.ОбработкаЗаказов.Записывать = Истина;
		Движения.ОстаткиТоваров.Записывать = Истина;
		//Доработка Диплом Шутова И.Н.
		Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
		
		Для Каждого ТекСтрокаУслуги Из Услуги Цикл
			Если ТекСтрокаУслуги.Номенклатура = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить() тогда
				Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.Клиент = Контрагент;
				Движение.Договор = Договор;
				Движение.СуммаКОплате = ТекСтрокаУслуги.Сумма;
				Движение.КоличествоЧасов = ТекСтрокаУслуги.Количество;
			КонецЕсли;
		КонецЦикла; 
		//Конец доработки
		
		
		Движение = Движения.ОбработкаЗаказов.Добавить();
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Договор = Договор;
		Движение.Заказ = Основание;
		Движение.СуммаОтгрузки = СуммаДокумента;
		
		Для Каждого ТекСтрокаТовары Из Товары Цикл
			Движение = Движения.ОстаткиТоваров.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Контрагент = Контрагент;
			Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
			Движение.Сумма = ТекСтрокаТовары.Сумма;
			Движение.Количество = ТекСтрокаТовары.Количество;
		КонецЦикла;
		
	КонецПроцедуры
	
	
	#КонецОбласти
	
	#Область СлужебныеПроцедурыИФункции
	
	//Доработка автозаполнение Шутова И.Н.
	Процедура ВыполнитьАвтозаполнение(ДатаДокумента) Экспорт
		Дата = ДатаДокумента;
		НоменклатураАП = Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить();
		НоменклатураРаботы = Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить();
		Если Не ЗначениеЗаполнено(НоменклатураАП) или Не ЗначениеЗаполнено (НоменклатураРаботы) тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указана номенклатура абонентской платы или работы");	
			Возврат;
		КонецЕсли;
		Услуги.Очистить();
		Стоимость = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "ВКМ_СуммаАбонентскойПлаты,ВКМ_СтоимостьЧаса");
		Сумма = Стоимость.ВКМ_СуммаАбонентскойПлаты;
		Цена = Стоимость.ВКМ_СтоимостьЧаса;
		Если ЗначениеЗаполнено(Сумма) тогда
			НоваяСтрока = Услуги.Добавить();	
			НоваяСтрока.Номенклатура = НоменклатураАП;
			НоваяСтрока.Количество = 1;
			НоваяСтрока.Цена = Сумма;
			НоваяСтрока.Сумма = НоваяСтрока.Цена;
		КонецЕсли;
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ВКМ_ВыполненныеКлиентуРаботыОбороты.КоличествоЧасовПриход
		|ИЗ
		|	РегистрНакопления.ВКМ_ВыполненныеКлиентуРаботы.Обороты(&ДатаНачала, &ДатаОкончания,, Договор = &Договор) КАК
		|		ВКМ_ВыполненныеКлиентуРаботыОбороты";
		
		Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(ДатаДокумента));
		Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ДатаДокумента));
		Запрос.УстановитьПараметр("Договор", Договор);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Услуги.Добавить();	
			НоваяСтрока.Номенклатура = НоменклатураРаботы;
			НоваяСтрока.Количество = Выборка.КоличествоЧасовПриход;
			НоваяСтрока.Цена = Цена;
			НоваяСтрока.Сумма = НоваяСтрока.Количество*Цена;
		КонецЦикла;	
	КонецПроцедуры	
	
	//Конец доработки
	
	
	Процедура ЗаполнитьНаОснованииЗаказаПокупателя(ДанныеЗаполнения)
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ЗаказПокупателя.Организация КАК Организация,
		|	ЗаказПокупателя.Контрагент КАК Контрагент,
		|	ЗаказПокупателя.Договор КАК Договор,
		|	ЗаказПокупателя.СуммаДокумента КАК СуммаДокумента,
		|	ЗаказПокупателя.Товары.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Количество КАК Количество,
		|		Цена КАК Цена,
		|		Сумма КАК Сумма
		|	) КАК Товары,
		|	ЗаказПокупателя.Услуги.(
		|		Ссылка КАК Ссылка,
		|		НомерСтроки КАК НомерСтроки,
		|		Номенклатура КАК Номенклатура,
		|		Количество КАК Количество,
		|		Цена КАК Цена,
		|		Сумма КАК Сумма
		|	) КАК Услуги
		|ИЗ
		|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
		|ГДЕ
		|	ЗаказПокупателя.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Не Выборка.Следующий() Тогда
			Возврат;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		
		ТоварыОснования = Выборка.Товары.Выбрать();
		Пока ТоварыОснования.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Товары.Добавить(), ТоварыОснования);
		КонецЦикла;
		
		УслугиОснования = Выборка.Услуги.Выбрать();
		Пока ТоварыОснования.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Услуги.Добавить(), УслугиОснования);
		КонецЦикла;
		
		Основание = ДанныеЗаполнения;
		
	КонецПроцедуры
	//Доработка диплом Шутова ИН	
	Процедура ЗаполнитьПоДоговору(ДанныеЗаполнения)
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Владелец КАК Контрагент,
		|	ДоговорыКонтрагентов.Ссылка КАК Договор,
		|	ДоговорыКонтрагентов.Организация КАК Организация
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Не Выборка.Следующий() Тогда
			Возврат;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
		
	КонецПроцедуры	
	//Конец доработки
	#КонецОбласти
	
#КонецЕсли
