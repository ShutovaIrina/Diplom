#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СформироватьДвиженияНачислений();
	СформироватьДвиженияНДФЛ();
	РассчитатьОклад();
	РассчитатьДоплату(Отказ);
	РассчитатьОтпускные();
	РассчитатьНДФЛ();
	СформироватьДвиженияПоВзаиморасчетам();
	
КонецПроцедуры	

#КонецОбласти

#Область СлужебныепроцедурыИФункции


Процедура СформироватьДвиженияНачислений()
	
	Движения.ВКМ_ОтпускаСотрудников.Записывать = Истина;
	Для Каждого ТекСтрока из Начисления Цикл
		Если ТекСтрока.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад Тогда
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.ВидРасчета = ТекСтрока.ВидРасчета;
			Движение.ПериодРегистрации = Дата;
			Движение.ПериодДействияНачало = НачалоМесяца(Дата);
			Движение.ПериодДействияКонец = КонецМесяца(Дата);
			Движение.Сотрудник = ТекСтрока.Сотрудник;
		Иначе 
			Если ТекСтрока.ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпускные Тогда
				Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
				Движение.ВидРасчета = ТекСтрока.ВидРасчета;
				Движение.ПериодРегистрации = Дата;
				Движение.ПериодДействияНачало = ТекСтрока.ДатаНачала;
				Движение.ПериодДействияКонец = ТекСтрока.ДатаОкончания;
				Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(ТекСтрока.ДатаНачала, -12));
				Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(ТекСтрока.ДатаОкончания,-1));
				Движение.Сотрудник = ТекСтрока.Сотрудник;
				//Заполним регистр по отпускам
				Движение = Движения.ВКМ_ОтпускаСотрудников.Добавить();
				Движение.Период = Дата;
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Сотрудник = ТекСтрока.Сотрудник;
				Движение.ДнейОтпуска = (КонецДня(ТекСтрока.ДатаОкончания) - ТекСтрока.ДатаНачала+1)/(3600*24);
			Иначе 
				Если ТекСтрока.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПроцентЗаВыполнениеРабот Тогда
					Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
					Движение.ВидРасчета = ТекСтрока.ВидРасчета;
					Движение.ПериодРегистрации = Дата;
					Движение.Сотрудник = ТекСтрока.Сотрудник;
				КонецЕсли;
			КонецЕсли	
		КонецЕсли;
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	
	
КонецПроцедуры

Процедура СформироватьДвиженияНДФЛ()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_НачислениеЗарплатыНачисления.Сотрудник
	|ИЗ
	|	Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
	|ГДЕ
	|	ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_НачислениеЗарплатыНачисления.Сотрудник";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДвижениеНДФЛ = Движения.ВКМ_Удержания.Добавить();
		ДвижениеНДФЛ.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		ДвижениеНДФЛ.ПериодРегистрации = Дата;
		ДвижениеНДФЛ.ПериодДействияНачало = НачалоМесяца(Дата);
		ДвижениеНДФЛ.ПериодДействияКонец = КонецМесяца(Дата);
		ДвижениеНДФЛ.БазовыйПериодНачало = НачалоМесяца(Дата);
		ДвижениеНДФЛ.БазовыйПериодКонец  = КонецМесяца(Дата);
		ДвижениеНДФЛ.Сотрудник = Выборка.Сотрудник;
	КонецЦикла;
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры	

Процедура РассчитатьДоплату (Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеПриход, 0) КАК СуммаКОплатеПриход,
	|	ВКМ_ДополнительныеНачисления.НомерСтроки
	|ИЗ
	|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&НачалоМесяца, &КонецМесяца,, Сотрудник
	|			В
	|			(ВЫБРАТЬ
	|				ВКМ_НачислениеЗарплатыНачисления.Сотрудник
	|			ИЗ
	|				Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
	|			ГДЕ
	|				ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Ссылка)) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
	|		ПО ВКМ_ДополнительныеНачисления.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник
	|ГДЕ
	|	ВКМ_ДополнительныеНачисления.Регистратор = &Ссылка
	|	И ВКМ_ДополнительныеНачисления.ВидРасчета = &ПроцентОтРабот";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ПроцентОтРабот", ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПроцентЗаВыполнениеРабот);
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Дата));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ДополнительныеНачисления[Выборка.НомерСтроки -1];
		Движение.Результат = Выборка.СуммаКОплатеПриход;
		
	КонецЦикла;	
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	
КонецПроцедуры

Процедура РассчитатьОтпускные()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК БазаДоп,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК БазаОсн,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
	|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ОтработаноДнейБаза, 0) КАК БазаДней,
	|	ВКМ_ОсновныеНачисления.ПериодДействияНачало,
	|	ВКМ_ОсновныеНачисления.ПериодДействияКонец
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
	|			Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения,,
	|			Регистратор = &Ссылка) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
	|		И ВидРасчета = &Отпускные) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	|	И ВКМ_ОсновныеНачисления.ВидРасчета = &Отпускные";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Отпускные", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпускные);
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки -1];
		Движение.ОтработаноДней = Выборка.Факт;
		Если Выборка.БазаДней = 0 Тогда
			Движение.Результат = 0;
			Продолжить;
		КонецЕсли;
		ДнейОтпуска = (Выборка.ПериодДействияКонец-Выборка.ПериодДействияНачало)/(24*60*60);
		Движение.Результат = (Выборка.БазаОсн + Выборка.БазаДоп)*ДнейОтпуска/Выборка.БазаДней;
		
		
		Если Движение.Сторно Тогда
			Движение.Результат = - Движение.Результат;
			Движение.ОтработаноДней = -Движение.ОтработаноДней;
		КонецЕсли;
	КонецЦикла;
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);		
	
КонецПроцедуры

Процедура РассчитатьОклад()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия КАК Факт,
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия КАК План,
	|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад, 0) КАК Оклад
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
	|	И ВидРасчета = &Оклад) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, Сотрудник В
	|			(ВЫБРАТЬ
	|				ВКМ_НачислениеЗарплатыНачисления.Сотрудник
	|			ИЗ
	|				Документ.ВКМ_НачислениеЗарплаты.Начисления КАК ВКМ_НачислениеЗарплатыНачисления
	|			ГДЕ
	|				ВКМ_НачислениеЗарплатыНачисления.Ссылка = &Ссылка)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
	|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Оклад", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("Дата", Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки -1];
		Движение.ОтработаноДней = Выборка.Факт;
		Движение.Результат = Выборка.Оклад*(Выборка.Факт/Выборка.План);
	КонецЦикла;	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
КонецПроцедуры

Процедура РассчитатьНДФЛ()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК БазаОсн,
	|	ВКМ_Удержания.НомерСтроки
	|ПОМЕСТИТЬ ВТОсновныеРазрез
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерение, &Измерение, &Разрезы,
	|			Регистратор = &Ссылка) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Ссылка
	|	И ВКМ_Удержания.ВидРасчета = &НДФЛ
	|	И ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РегистраторРазрез = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_Удержания.НомерСтроки,
	|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК БазаДоп
	|ПОМЕСТИТЬ ВТДополнительныеРазрез
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(&Измерение, &Измерение, &Разрезы,
	|			Регистратор = &Ссылка
	|		И ВидРасчета = &НДФЛ) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|ГДЕ
	|	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РегистраторРазрез = &Ссылка
	|	И ВКМ_Удержания.ВидРасчета = &НДФЛ
	|	И ВКМ_Удержания.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОсновныеРазрез.БазаОсн,
	|	ЕСТЬNULL(ВТДополнительныеРазрез.БазаДоп, 0) КАК БазаДоп,
	|	ВТОсновныеРазрез.НомерСтроки
	|ИЗ
	|	ВТОсновныеРазрез КАК ВТОсновныеРазрез
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДополнительныеРазрез КАК ВТДополнительныеРазрез
	|		ПО ВТОсновныеРазрез.НомерСтроки = ВТДополнительныеРазрез.НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НДФЛ", ПланыВидовРасчета.ВКМ_Удержания.НДФЛ);
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Запрос.УстановитьПараметр("Измерение", Измерения);
	Разрезы = Новый Массив(1);
	Разрезы[0] = "Регистратор";
	Запрос.УстановитьПараметр("Разрезы", Разрезы);
	Выборка = Запрос.Выполнить().Выбрать();   
	Пока Выборка.Следующий() Цикл	
		Движение = Движения.ВКМ_Удержания[Выборка.НомерСтроки -1];
		Движение.Показатель = Выборка.БазаДоп + Выборка.БазаОсн;
		Движение.Результат = Движение.Показатель*0.13;	
	КонецЦикла;
	Движения.ВКМ_Удержания.Записать(,Истина);		
КонецПроцедуры

Процедура СформироватьДвиженияПоВзаиморасчетам()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисления.Сотрудник,
	|	ЕСТЬNULL(СУММА(ВКМ_ОсновныеНачисления.Результат), 0) КАК РезультатОсн,
	|	ЕСТЬNULL(СУММА(ВКМ_ДополнительныеНачисления.Результат), 0) КАК РезультатДоп,
	|	ЕСТЬNULL(МАКСИМУМ(ВКМ_Удержания.Результат), 0) КАК РезультатУд
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.Сотрудник = ВКМ_ДополнительныеНачисления.Сотрудник
	|		И ВКМ_ОсновныеНачисления.Регистратор = ВКМ_ДополнительныеНачисления.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ПО ВКМ_ОсновныеНачисления.Сотрудник = ВКМ_Удержания.Сотрудник
	|		И ВКМ_ОсновныеНачисления.Регистратор = ВКМ_Удержания.Регистратор
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВКМ_ОсновныеНачисления.Сотрудник";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = Выборка.РезультатОсн + Выборка.РезультатДоп - Выборка.РезультатУд;
	КонецЦикла;
	
КонецПроцедуры		

#КонецОбласти

